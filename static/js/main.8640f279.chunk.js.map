{"version":3,"sources":["services/weatherService.js","redux/actions.js","components/WeatherCard.js","services/StorageService.js","services/localService.js","components/Content.js","pages/Home.js","components/Header.js","components/CityCard.js","pages/Favorites.js","App.js","serviceWorker.js","assets/theme/theme.js","redux/reducers/homeReducer.js","index.js","assets/fonts/haas/NeueHaasDisplay-Roman.woff"],"names":["getCurrentWeather","getAutoCompCityList","query","axios","get","_getAutocompleteEndPoint","then","res","data","catch","Swal","fire","type","title","text","getForecasts","getDefaultForecasts","telAviv","getDefaultCurrentWeather","console","log","getDefaultCity","cityKey","a","_getCurrentWeatherEndpoint","currentWeather","currentWeatherToReturn","_getFiveDayForecastEndpoint","forecasts","forecastsToReturn","DailyForecasts","apiKey","_loadCity","city","_updateCurrentWeather","_updateForecasts","_updateAutoCompCityList","cityList","useStyles","makeStyles","root","minWidth","maxHeight","textAlign","bullet","display","margin","transform","fontSize","pos","marginTop","SimpleCard","props","classes","forecast","Card","className","CardContent","Typography","color","gutterBottom","Date","toString","slice","variant","component","Day","IconPhrase","maxTemp","Temperature","Maximum","Value","minTemp","Minimum","Math","floor","getTemprature","entityType","entityId","find","entity","post","newEntity","entities","push","_save","put","updatedEntity","idx","findIndex","splice","remove","filter","Key","postMany","newEntities","JSON","parse","localStorage","getItem","setItem","stringify","favorites","StorageService","length","save","favorite","favoriteKey","theme","maxWidth","card","weatherText","textGrid","border","connect","state","isFavoriteFound","i","Grid","container","direction","item","xs","LocalizedName","Metric","Button","onClick","localService","newFavorite","isFavorite","WeatherText","justify","alignItems","map","forecastIdx","key","WeatherCard","home","button","width","form","flexDirection","mapDispatchToProps","updateCity","dispatch","setDefaultCity","weatherService","updateCurrentWeather","updateForecasts","value","resetAutoCompCityList","setDefaultForecasts","autoCompCityList","useState","selectedCity","setSelectedCity","useEffect","fetchData","handleChange","ev","target","submitForm","preventDefault","Autocomplete","freeSolo","onChange","selected","Object","values","disableClearable","options","option","renderInput","params","onSubmit","TextField","textField","label","InputProps","toolbar","height","typography","flex","fontWeight","link","paddingRight","Header","AppBar","position","elevation","Toolbar","List","aria-label","Link","href","process","LocalObservationDateTime","temperature","noFavText","Favorites","favoriteIdx","history","createBrowserHistory","App","basename","path","Home","exact","Boolean","window","location","hostname","match","haas","fontFamily","fontStyle","fontDisplay","src","HaasRg","unicodeRange","createMuiTheme","breakpoints","sm","md","lg","xl","palette","primary","main","secondary","green","spacing","join","h1","lineHeight","h2","h3","h4","subtitle1","overrides","MuiCssBaseline","paddingLeft","down","padding","initialState","homeReducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8640f279.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  getCurrentWeather,\r\n  getAutoCompCityList,\r\n  getForecasts,\r\n  getDefaultForecasts,\r\n  getDefaultCurrentWeather,\r\n  getDefaultCity,\r\n};\r\n\r\n// const Axios = axios.create({\r\n//   withCredentials: true,\r\n// });\r\n\r\nasync function getCurrentWeather(cityKey) {\r\n  try {\r\n    const currentWeather = await axios.get(_getCurrentWeatherEndpoint(cityKey));\r\n    const currentWeatherToReturn = currentWeather.data[0];\r\n    return currentWeatherToReturn;\r\n  } catch (err) {\r\n    Swal.fire({\r\n      type: 'error',\r\n      title: 'You have exceeded 50 AJAX calls per Day',\r\n      text: 'Please, Try again tomorrow or with another Api Key.'\r\n    })\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction getAutoCompCityList(query) {\r\n  let ans = axios.get(_getAutocompleteEndPoint(query));\r\n  return ans.then((res) => {\r\n    const { data } = res;\r\n    return data;\r\n  }).catch(() => {\r\n    Swal.fire({\r\n      type: 'error',\r\n      title: 'You have exceeded 50 AJAX Calls a Day',\r\n      text: 'Please, Try again tomorrow or with another Api Key.'\r\n    })\r\n  })\r\n}\r\n\r\nasync function getForecasts(cityKey) {\r\n  try {\r\n    const forecasts = await axios.get(_getFiveDayForecastEndpoint(cityKey));\r\n    const forecastsToReturn = forecasts.data.DailyForecasts;\r\n    return forecastsToReturn;\r\n  } catch (err) {\r\n    Swal.fire({\r\n      type: 'error',\r\n      title: 'You have exceeded 50 AJAX Calls a Day',\r\n      text: 'Please, Try again tomorrow or with another Api Key.'\r\n    })\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction getDefaultForecasts() {\r\n  // Todo: call getForecasts\r\n  return telAviv[2][\"DailyForecasts\"];\r\n}\r\n\r\nfunction getDefaultCurrentWeather() {\r\n  console.log(telAviv[1])\r\n  return telAviv[1];\r\n}\r\n\r\nfunction getDefaultCity() {\r\n  return telAviv[0];\r\n}\r\n\r\nconst apiKey = \"rNwjsLkEBTSSNaB7HrTGjfFCY6NoBhbX\";\r\n\r\n// nEcFKqO7yXdLTQEIyW86i8zsOZSNlb2x\r\n// rNwjsLkEBTSSNaB7HrTGjfFCY6NoBhbX\r\n\r\nconst _getCurrentWeatherEndpoint = (cityKey) => {\r\n  return \"https://dataservice.accuweather.com/currentconditions/v1/\" + cityKey + \"?apikey=\" + apiKey\r\n}\r\n\r\nconst _getFiveDayForecastEndpoint = (cityKey) => {\r\n  return \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\" + cityKey + \"?apikey=\" + apiKey\r\n}\r\n\r\nconst _getAutocompleteEndPoint = (query) => {\r\n  return \"https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=\" + apiKey + \"&q=\" + query\r\n}\r\n\r\nconst _getGeolocationEndpoint = (lat, lon) => {\r\n  return \"https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=\" + apiKey + \"&q=\" + lat + \"%2C\" + lon\r\n}\r\n\r\nconst telAviv = [\r\n  {\r\n    \"Version\": 1,\r\n    \"Key\": \"215854\",\r\n    \"Type\": \"City\",\r\n    \"Rank\": 31,\r\n    \"LocalizedName\": \"Tel Aviv\",\r\n    \"EnglishName\": \"Tel Aviv\",\r\n    \"PrimaryPostalCode\": \"\",\r\n    \"Region\": {\r\n      \"ID\": \"MEA\",\r\n      \"LocalizedName\": \"Middle East\",\r\n      \"EnglishName\": \"Middle East\"\r\n    },\r\n    \"Country\": {\r\n      \"ID\": \"IL\",\r\n      \"LocalizedName\": \"Israel\",\r\n      \"EnglishName\": \"Israel\"\r\n    },\r\n    \"AdministrativeArea\": {\r\n      \"ID\": \"TA\",\r\n      \"LocalizedName\": \"Tel Aviv\",\r\n      \"EnglishName\": \"Tel Aviv\",\r\n      \"Level\": 1,\r\n      \"LocalizedType\": \"District\",\r\n      \"EnglishType\": \"District\",\r\n      \"CountryID\": \"IL\"\r\n    },\r\n    \"TimeZone\": {\r\n      \"Code\": \"IDT\",\r\n      \"Name\": \"Asia/Jerusalem\",\r\n      \"GmtOffset\": 3,\r\n      \"IsDaylightSaving\": true,\r\n      \"NextOffsetChange\": \"2020-10-24T23:00:00Z\"\r\n    },\r\n    \"GeoPosition\": {\r\n      \"Latitude\": 32.045,\r\n      \"Longitude\": 34.77,\r\n      \"Elevation\": {\r\n        \"Metric\": {\r\n          \"Value\": 34,\r\n          \"Unit\": \"m\",\r\n          \"UnitType\": 5\r\n        },\r\n        \"Imperial\": {\r\n          \"Value\": 111,\r\n          \"Unit\": \"ft\",\r\n          \"UnitType\": 0\r\n        }\r\n      }\r\n    },\r\n    \"IsAlias\": false,\r\n    \"SupplementalAdminAreas\": [],\r\n    \"DataSets\": [\r\n      \"AirQualityCurrentConditions\",\r\n      \"AirQualityForecasts\",\r\n      \"Alerts\",\r\n      \"ForecastConfidence\"\r\n    ]\r\n  },\r\n  {\r\n    \"LocalObservationDateTime\": \"2020-07-11T15:40:00+03:00\",\r\n    \"EpochTime\": 1594471200,\r\n    \"WeatherText\": \"Partly sunny\",\r\n    \"WeatherIcon\": 3,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 31,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 88,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n  },\r\n  {\r\n    \"Headline\": {\r\n      \"EffectiveDate\": \"2020-07-11T08:00:00+03:00\",\r\n      \"EffectiveEpochDate\": 1594443600,\r\n      \"Severity\": 4,\r\n      \"Text\": \"Pleasant this weekend\",\r\n      \"Category\": \"mild\",\r\n      \"EndDate\": null,\r\n      \"EndEpochDate\": null,\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/extended-weather-forecast/215854?unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?unit=c&lang=en-us\"\r\n    },\r\n    \"DailyForecasts\": [\r\n      {\r\n        \"Date\": \"2020-07-08T07:00:00+03:00\",\r\n        \"EpochDate\": 1594180800,\r\n        \"Sun\": {\r\n          \"Rise\": \"2020-07-08T05:42:00+03:00\",\r\n          \"EpochRise\": 1594176120,\r\n          \"Set\": \"2020-07-08T19:50:00+03:00\",\r\n          \"EpochSet\": 1594227000\r\n        },\r\n        \"Moon\": {\r\n          \"Rise\": \"2020-07-08T22:30:00+03:00\",\r\n          \"EpochRise\": 1594236600,\r\n          \"Set\": \"2020-07-09T09:35:00+03:00\",\r\n          \"EpochSet\": 1594276500,\r\n          \"Phase\": \"WaningGibbous\",\r\n          \"Age\": 17\r\n        },\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 24,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.7,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 23,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 35.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperatureShade\": {\r\n          \"Minimum\": {\r\n            \"Value\": 23,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.6,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"HoursOfSun\": 13.1,\r\n        \"DegreeDaySummary\": {\r\n          \"Heating\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Cooling\": {\r\n            \"Value\": 9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"AirAndPollen\": [\r\n          {\r\n            \"Name\": \"AirQuality\",\r\n            \"Value\": 40,\r\n            \"Category\": \"Good\",\r\n            \"CategoryValue\": 1,\r\n            \"Type\": \"Ozone\"\r\n          },\r\n          {\r\n            \"Name\": \"Grass\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Mold\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Ragweed\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Tree\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"UVIndex\",\r\n            \"Value\": 12,\r\n            \"Category\": \"Extreme\",\r\n            \"CategoryValue\": 5\r\n          }\r\n        ],\r\n        \"Day\": {\r\n          \"Icon\": 1,\r\n          \"IconPhrase\": \"Sunny\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Sunny and nice\",\r\n          \"LongPhrase\": \"Sunny and nice\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 13,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 292,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 24.1,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 334,\r\n              \"Localized\": \"NNW\",\r\n              \"English\": \"NNW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 4\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 34,\r\n          \"IconPhrase\": \"Mostly clear\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Mainly clear\",\r\n          \"LongPhrase\": \"Mainly clear\",\r\n          \"PrecipitationProbability\": 3,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 3,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 7.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 320,\r\n              \"Localized\": \"NW\",\r\n              \"English\": \"NW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 20.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 3,\r\n              \"Localized\": \"N\",\r\n              \"English\": \"N\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 25\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2020-07-09T07:00:00+03:00\",\r\n        \"EpochDate\": 1594267200,\r\n        \"Sun\": {\r\n          \"Rise\": \"2020-07-09T05:42:00+03:00\",\r\n          \"EpochRise\": 1594262520,\r\n          \"Set\": \"2020-07-09T19:50:00+03:00\",\r\n          \"EpochSet\": 1594313400\r\n        },\r\n        \"Moon\": {\r\n          \"Rise\": \"2020-07-09T23:04:00+03:00\",\r\n          \"EpochRise\": 1594325040,\r\n          \"Set\": \"2020-07-10T10:31:00+03:00\",\r\n          \"EpochSet\": 1594366260,\r\n          \"Phase\": \"WaningGibbous\",\r\n          \"Age\": 18\r\n        },\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 22.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 29.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 22.2,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 33.8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperatureShade\": {\r\n          \"Minimum\": {\r\n            \"Value\": 22.2,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 29.2,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"HoursOfSun\": 11.1,\r\n        \"DegreeDaySummary\": {\r\n          \"Heating\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Cooling\": {\r\n            \"Value\": 8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"AirAndPollen\": [\r\n          {\r\n            \"Name\": \"AirQuality\",\r\n            \"Value\": 41,\r\n            \"Category\": \"Good\",\r\n            \"CategoryValue\": 1,\r\n            \"Type\": \"Particle Pollution\"\r\n          },\r\n          {\r\n            \"Name\": \"Grass\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Mold\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Ragweed\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Tree\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"UVIndex\",\r\n            \"Value\": 12,\r\n            \"Category\": \"Extreme\",\r\n            \"CategoryValue\": 5\r\n          }\r\n        ],\r\n        \"Day\": {\r\n          \"Icon\": 2,\r\n          \"IconPhrase\": \"Mostly sunny\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Mostly sunny and beautiful\",\r\n          \"LongPhrase\": \"Beautiful with sunshine and patchy clouds\",\r\n          \"PrecipitationProbability\": 2,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 2,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 13,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 289,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 22.2,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 307,\r\n              \"Localized\": \"NW\",\r\n              \"English\": \"NW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 21\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 33,\r\n          \"IconPhrase\": \"Clear\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Clear\",\r\n          \"LongPhrase\": \"Clear\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 7.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 5,\r\n              \"Localized\": \"N\",\r\n              \"English\": \"N\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 18.5,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 3,\r\n              \"Localized\": \"N\",\r\n              \"English\": \"N\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 8\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2020-07-10T07:00:00+03:00\",\r\n        \"EpochDate\": 1594353600,\r\n        \"Sun\": {\r\n          \"Rise\": \"2020-07-10T05:43:00+03:00\",\r\n          \"EpochRise\": 1594348980,\r\n          \"Set\": \"2020-07-10T19:50:00+03:00\",\r\n          \"EpochSet\": 1594399800\r\n        },\r\n        \"Moon\": {\r\n          \"Rise\": \"2020-07-10T23:34:00+03:00\",\r\n          \"EpochRise\": 1594413240,\r\n          \"Set\": \"2020-07-11T11:26:00+03:00\",\r\n          \"EpochSet\": 1594455960,\r\n          \"Phase\": \"WaningGibbous\",\r\n          \"Age\": 19\r\n        },\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 23.5,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.2,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 23.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 34.4,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperatureShade\": {\r\n          \"Minimum\": {\r\n            \"Value\": 23.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"HoursOfSun\": 12.4,\r\n        \"DegreeDaySummary\": {\r\n          \"Heating\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Cooling\": {\r\n            \"Value\": 9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"AirAndPollen\": [\r\n          {\r\n            \"Name\": \"AirQuality\",\r\n            \"Value\": 45,\r\n            \"Category\": \"Good\",\r\n            \"CategoryValue\": 1,\r\n            \"Type\": \"Particle Pollution\"\r\n          },\r\n          {\r\n            \"Name\": \"Grass\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Mold\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Ragweed\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Tree\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"UVIndex\",\r\n            \"Value\": 12,\r\n            \"Category\": \"Extreme\",\r\n            \"CategoryValue\": 5\r\n          }\r\n        ],\r\n        \"Day\": {\r\n          \"Icon\": 1,\r\n          \"IconPhrase\": \"Sunny\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Sunshine and pleasant\",\r\n          \"LongPhrase\": \"Sunshine and pleasant\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 13,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 294,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 24.1,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 335,\r\n              \"Localized\": \"NNW\",\r\n              \"English\": \"NNW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 5\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 34,\r\n          \"IconPhrase\": \"Mostly clear\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Mainly clear\",\r\n          \"LongPhrase\": \"Mainly clear\",\r\n          \"PrecipitationProbability\": 1,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 1,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 7.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 96,\r\n              \"Localized\": \"E\",\r\n              \"English\": \"E\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 20.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 350,\r\n              \"Localized\": \"N\",\r\n              \"English\": \"N\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 29\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2020-07-11T07:00:00+03:00\",\r\n        \"EpochDate\": 1594440000,\r\n        \"Sun\": {\r\n          \"Rise\": \"2020-07-11T05:43:00+03:00\",\r\n          \"EpochRise\": 1594435380,\r\n          \"Set\": \"2020-07-11T19:49:00+03:00\",\r\n          \"EpochSet\": 1594486140\r\n        },\r\n        \"Moon\": {\r\n          \"Rise\": null,\r\n          \"EpochRise\": null,\r\n          \"Set\": \"2020-07-11T11:26:00+03:00\",\r\n          \"EpochSet\": 1594455960,\r\n          \"Phase\": \"WaningGibbous\",\r\n          \"Age\": 20\r\n        },\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.5,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.3,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 35.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperatureShade\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.3,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"HoursOfSun\": 11.8,\r\n        \"DegreeDaySummary\": {\r\n          \"Heating\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Cooling\": {\r\n            \"Value\": 10,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"AirAndPollen\": [\r\n          {\r\n            \"Name\": \"AirQuality\",\r\n            \"Value\": 50,\r\n            \"Category\": \"Good\",\r\n            \"CategoryValue\": 1,\r\n            \"Type\": \"Particle Pollution\"\r\n          },\r\n          {\r\n            \"Name\": \"Grass\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Mold\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Ragweed\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Tree\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"UVIndex\",\r\n            \"Value\": 12,\r\n            \"Category\": \"Extreme\",\r\n            \"CategoryValue\": 5\r\n          }\r\n        ],\r\n        \"Day\": {\r\n          \"Icon\": 2,\r\n          \"IconPhrase\": \"Mostly sunny\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Mostly sunny and beautiful\",\r\n          \"LongPhrase\": \"Mostly sunny and beautiful\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 13,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 287,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 22.2,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 307,\r\n              \"Localized\": \"NW\",\r\n              \"English\": \"NW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 12\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 35,\r\n          \"IconPhrase\": \"Partly cloudy\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Partly cloudy and very warm\",\r\n          \"LongPhrase\": \"Partly cloudy and very warm\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 7.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 269,\r\n              \"Localized\": \"W\",\r\n              \"English\": \"W\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 18.5,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 339,\r\n              \"Localized\": \"NNW\",\r\n              \"English\": \"NNW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 31\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2020-07-12T07:00:00+03:00\",\r\n        \"EpochDate\": 1594526400,\r\n        \"Sun\": {\r\n          \"Rise\": \"2020-07-12T05:44:00+03:00\",\r\n          \"EpochRise\": 1594521840,\r\n          \"Set\": \"2020-07-12T19:49:00+03:00\",\r\n          \"EpochSet\": 1594572540\r\n        },\r\n        \"Moon\": {\r\n          \"Rise\": \"2020-07-12T00:02:00+03:00\",\r\n          \"EpochRise\": 1594501320,\r\n          \"Set\": \"2020-07-12T12:19:00+03:00\",\r\n          \"EpochSet\": 1594545540,\r\n          \"Phase\": \"Last\",\r\n          \"Age\": 21\r\n        },\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 30.8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.4,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 36,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"RealFeelTemperatureShade\": {\r\n          \"Minimum\": {\r\n            \"Value\": 25.4,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 32.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"HoursOfSun\": 12.3,\r\n        \"DegreeDaySummary\": {\r\n          \"Heating\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Cooling\": {\r\n            \"Value\": 10,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"AirAndPollen\": [\r\n          {\r\n            \"Name\": \"AirQuality\",\r\n            \"Value\": 29,\r\n            \"Category\": \"Good\",\r\n            \"CategoryValue\": 1,\r\n            \"Type\": \"Particle Pollution\"\r\n          },\r\n          {\r\n            \"Name\": \"Grass\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Mold\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Ragweed\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"Tree\",\r\n            \"Value\": 0,\r\n            \"Category\": \"Low\",\r\n            \"CategoryValue\": 1\r\n          },\r\n          {\r\n            \"Name\": \"UVIndex\",\r\n            \"Value\": 12,\r\n            \"Category\": \"Extreme\",\r\n            \"CategoryValue\": 5\r\n          }\r\n        ],\r\n        \"Day\": {\r\n          \"Icon\": 1,\r\n          \"IconPhrase\": \"Sunny\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Sunshine and pleasant\",\r\n          \"LongPhrase\": \"Abundant sunshine and pleasant\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 13,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 285,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 22.2,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 295,\r\n              \"Localized\": \"WNW\",\r\n              \"English\": \"WNW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 7\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 35,\r\n          \"IconPhrase\": \"Partly cloudy\",\r\n          \"HasPrecipitation\": false,\r\n          \"ShortPhrase\": \"Partly cloudy and very warm\",\r\n          \"LongPhrase\": \"Partly cloudy and very warm\",\r\n          \"PrecipitationProbability\": 0,\r\n          \"ThunderstormProbability\": 0,\r\n          \"RainProbability\": 0,\r\n          \"SnowProbability\": 0,\r\n          \"IceProbability\": 0,\r\n          \"Wind\": {\r\n            \"Speed\": {\r\n              \"Value\": 7.4,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 279,\r\n              \"Localized\": \"W\",\r\n              \"English\": \"W\"\r\n            }\r\n          },\r\n          \"WindGust\": {\r\n            \"Speed\": {\r\n              \"Value\": 16.7,\r\n              \"Unit\": \"km/h\",\r\n              \"UnitType\": 7\r\n            },\r\n            \"Direction\": {\r\n              \"Degrees\": 319,\r\n              \"Localized\": \"NW\",\r\n              \"English\": \"NW\"\r\n            }\r\n          },\r\n          \"TotalLiquid\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Rain\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"Snow\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"cm\",\r\n            \"UnitType\": 4\r\n          },\r\n          \"Ice\": {\r\n            \"Value\": 0,\r\n            \"Unit\": \"mm\",\r\n            \"UnitType\": 3\r\n          },\r\n          \"HoursOfPrecipitation\": 0,\r\n          \"HoursOfRain\": 0,\r\n          \"HoursOfSnow\": 0,\r\n          \"HoursOfIce\": 0,\r\n          \"CloudCover\": 44\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&unit=c&lang=en-us\"\r\n      }\r\n    ]\r\n  }\r\n\r\n];","import weatherService from \"../services/weatherService\";\r\n\r\nexport function updateCity(city) {\r\n  return (dispatch) => {\r\n    dispatch(_loadCity(city));\r\n  };\r\n}\r\n\r\n// THUNK\r\nexport function loadCity() {\r\n  return (dispatch) => {\r\n    weatherService.getCity().then((city) => {\r\n      dispatch(_loadCity(city));\r\n    }).catch(() => dispatch(_loadCity(null)));\r\n  };\r\n}\r\n\r\n// THUNK\r\nexport function updateCurrentWeather(city) {\r\n  return async dispatch => {\r\n    try {\r\n      const currentWeather = await weatherService.getCurrentWeather(city.Key);\r\n      dispatch(_updateCurrentWeather(currentWeather));\r\n    } catch (err) {\r\n      console.log('ForecastsAction: err in updateForecasts', err);\r\n    }\r\n  };\r\n}\r\n\r\n//THUNK\r\nexport function updateForecasts(city) {\r\n  return async dispatch => {\r\n    try {\r\n      const forecasts = await weatherService.getForecasts(city.Key);\r\n      dispatch(_updateForecasts(forecasts));\r\n    } catch (err) {\r\n      console.log('ForecastsAction: err in updateForecasts', err);\r\n    }\r\n  };\r\n}\r\n\r\n// THUNK\r\nexport function getAutoCompCityList(value) {\r\n  return (dispatch) => {\r\n    weatherService.getAutoCompCityList(value).then((cityList) => {\r\n      dispatch(_updateAutoCompCityList(cityList));\r\n    }).catch();\r\n  };\r\n}\r\n\r\nexport function resetAutoCompCityList() {\r\n  return (dispatch) => {\r\n    dispatch(_updateAutoCompCityList([]));\r\n  };\r\n}\r\n\r\nexport function setDefaultCity() {\r\n  return (dispatch) => {\r\n    dispatch(_loadCity(weatherService.getDefaultCity()));\r\n  };\r\n}\r\n\r\nexport function setDefaultCurrentWeather() {\r\n  return (dispatch) => {\r\n    dispatch(_updateCurrentWeather(weatherService.getDefaultCurrentWeather()));\r\n  };\r\n}\r\n\r\nexport function setDefaultForecasts() {\r\n  return (dispatch) => {\r\n    dispatch(_updateForecasts(weatherService.getDefaultForecasts()));\r\n  };\r\n}\r\n\r\n\r\n// ACTIONS\r\n\r\nfunction _loadCity(city) {\r\n  return {\r\n    type: \"LOAD_CITY\",\r\n    city,\r\n  };\r\n}\r\n\r\nfunction _updateCurrentWeather(currentWeather) {\r\n  return {\r\n    type: \"WEATHER_UPDATE\",\r\n    currentWeather,\r\n  };\r\n}\r\n\r\nfunction _updateForecasts(forecasts) {\r\n  return {\r\n    type: \"FORECASTS_UPDATE\",\r\n    forecasts,\r\n  }\r\n}\r\n\r\nfunction _updateAutoCompCityList(cityList) {\r\n  return {\r\n    type: \"AUTO_COMPLETE_UPDATE\",\r\n    cityList,\r\n  }\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 150,\n    maxHeight: 140,\n    textAlign: \"center\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 12,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  const { forecast } = props;\n  \n  const getWeeklyDay = () => {\n    const forecastDate = new Date(forecast.Date)\n    return forecastDate.toString().slice(0, 3);\n  }\n\n  const getTemprature = () => {\n    const maxTemp = forecast.Temperature.Maximum.Value;\n    const minTemp = forecast.Temperature.Minimum.Value;\n    const avgTemp = Math.floor((((maxTemp + minTemp) / 2) - 32) * 5/9).toString() + \" °C\";\n    return avgTemp;\n  }\n  \n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {getWeeklyDay()}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          {forecast.Day.IconPhrase}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {getTemprature()}\n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\n\nexport default SimpleCard;","export default {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany\r\n}\r\n\r\nfunction query(entityType) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return entities;\r\n}\r\n\r\nfunction get(entityType, entityId) {\r\n    const entities = query(entityType)\r\n    const entity = entities.find(entity => entity.cityKey === entityId)\r\n    return entity;\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    let entities = query(entityType)\r\n    entities.push(newEntity);\r\n    _save(entityType, entities)\r\n    return newEntity;\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    let entities = query(entityType)\r\n    entities.push(...newEntities);\r\n    _save(entityType, entities)\r\n    return entities;\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    let entities = query(entityType)\r\n    const idx = entities.findIndex(entity => entity.cityKey === updatedEntity.cityKey);\r\n    entities.splice(idx, 1, updatedEntity)\r\n    _save(entityType, entities)\r\n    return updatedEntity;\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    let entities = query(entityType)\r\n    entities = entities.filter(entity => entity.Key !== entityId);\r\n    _save(entityType, entities)\r\n}\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n","import StorageService from \"./StorageService\"\r\n\r\n\r\nexport default {\r\n    query,\r\n    save,\r\n    remove,\r\n    get\r\n}\r\n\r\nfunction query() {\r\n    const favorites = StorageService.query('favorites')\r\n    console.log(favorites);\r\n    if (favorites.length === 0) {\r\n        return StorageService.postMany('favorites', favorites)\r\n    } else {\r\n        return favorites\r\n    }\r\n}\r\n\r\nfunction get(cityKey) {\r\n    return StorageService.get('favorites', cityKey)\r\n}\r\n\r\nfunction remove(favoriteKey) {\r\n    return StorageService.remove('favorites', favoriteKey)\r\n}\r\n\r\nfunction save(favorite) {\r\n    return StorageService.post('favorites', favorite)\r\n}\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WeatherCard from \"./WeatherCard\";\nimport localService from \"../services/localService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"1550px\",\n  },\n  text: {\n    margin: \"10px\",\n\n  },\n  card: {\n    margin: \"10px\"\n  },\n  weatherText: {\n    margin: \"30px 60px 60px 60px\",\n    textAlign: \"center\",\n  },\n  textGrid: {\n    border: \"1px solid lightgrey\",\n  },\n  '@media (max-width:730px)': {\n  },\n}));\n\n\nconst Content = (props) => {\n  const classes = useStyles();\n  const { city, currentWeather, forecasts } = props;\n\n  const getTemprature = () => {\n    const temperature = currentWeather.Temperature.Metric.Value;\n    return temperature.toString() + \" °C\";\n  }\n\n  const handleFavorites = () => {\n    const favorites = localService.query()\n    console.log(city)\n    console.log(favorites)\n    if(isFavoriteFound(favorites)) {\n      localService.remove(city.Key)\n    } else {\n      const newFavorite = { ...city, ...currentWeather, isFavorite: true}\n      localService.save(newFavorite)\n    }\n  }\n\n  const isFavoriteFound = (favorites) => {\n    for(var i = 0; i < favorites.length; i++) {\n        if (city.Key === favorites[i].Key) {\n            return true;\n        }\n    }\n    return false;\n  }\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item container direction=\"row\">\n        <Grid item xs={1}></Grid>\n        <Grid item container xs={10} direction=\"column\" className={classes.textGrid}>\n          <Typography className={classes.text} variant=\"h5\" component=\"h2\">\n            {city.LocalizedName}\n          </Typography>\n          <Typography className={classes.text} variant=\"h5\" component=\"h2\">\n            {getTemprature()}\n          </Typography>\n          <Button onClick={handleFavorites} variant=\"contained\" color=\"primary\">toggle favorites</Button>\n          <Typography className={classes.weatherText} variant=\"h2\">\n            {currentWeather.WeatherText}\n          </Typography>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n      <Grid \n        container item\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {(forecasts) && forecasts.map((forecast, forecastIdx) => (\n          <Grid item className={classes.card} key={forecastIdx}>\n            <WeatherCard forecast={forecast} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    city: state.city,\n    currentWeather: state.currentWeather,\n    forecasts: state.forecasts,\n  };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { \n  setDefaultCity, \n  updateCity,\n  updateCurrentWeather, \n  setDefaultForecasts, \n  updateForecasts, \n  getAutoCompCityList, \n  resetAutoCompCityList } from \"../redux/actions\";\n\nimport Content from \"../components/Content\";\nimport weatherService from \"../services/weatherService\";\n\nconst useStyles = makeStyles(() => ({\n  home: {\n    margin: \"50px auto\",\n    maxWidth: \"1550px\",\n    textAlign: \"center\",\n  },\n  button: {\n    width: \"150px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"50px auto\", \n    alignItems: \"center\",\n  },\n  '@media (max-width:1550px)': {\n    home: {\n      margin: \"0px 10px\", \n    },\n  },\n  '@media (max-width:450px)': {\n    home: {\n      margin: \"0px 20px\", \n    },\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const [selectedCity, setSelectedCity] = useState(weatherService.getDefaultCity())\n\n  useEffect(() => {\n    async function fetchData() {\n      await props.updateForecasts(selectedCity);\n      await props.updateCurrentWeather(selectedCity);\n    }\n    fetchData();\n  }, []);\n\n  const handleChange = async (ev) => {\n    let { value } = ev.target\n    if (value !== \"\") {\n      await props.getAutoCompCityList(value)\n    } else {\n      props.resetAutoCompCityList()\n    }\n  }\n\n  const submitForm = async (ev) => {\n    ev.preventDefault();\n    await props.updateCity(selectedCity);\n    await props.updateCurrentWeather(selectedCity);\n    await props.updateForecasts(selectedCity);\n  }\n\n  const handleSelected = (ev, value) => {\n    const selected = Object.values(props.autoCompCityList).find(city => city.LocalizedName === value)\n    setSelectedCity({ ...selected })\n  }\n\n  return (\n    <Grid item container direction=\"column\">\n      <Grid item>\n          <Autocomplete\n            freeSolo\n            onChange={handleSelected}\n            disableClearable\n            options={(props.autoCompCityList) && props.autoCompCityList.map((option) => option.LocalizedName)}\n            renderInput={(params) => (\n              <form onSubmit={submitForm} className={classes.form}>\n                <TextField\n                  {...params}\n                  className={classes.textField}\n                  label=\"Search City\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n                <Button className={classes.button} type=\"submit\" variant=\"contained\" color=\"primary\">Check Weather</Button>\n              </form>\n            )}\n          />\n      </Grid>\n      <Grid item>\n        <Content />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    city: state.city,\n    currentWeather: state.currentWeather,\n    autoCompCityList: state.autoCompCityList,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateCity,\n  setDefaultCity,\n  updateCurrentWeather,\n  updateForecasts,\n  getAutoCompCityList,\n  resetAutoCompCityList,\n  setDefaultForecasts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from \"react\";\nimport { AppBar, Toolbar, Typography, List, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    height: \"70px\",\n  },\n  typography: {\n    flex: 1,\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n  },\n  link: {\n    paddingRight: \"40px\",\n  },\n  '@media (min-width:1300px)': {\n    toolbar: {\n      height: \"80px\",\n    },\n  },\n  '@media (max-width:500px)': {\n    link: {\n      paddingRight: \"20px\",\n    },\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" elevation={0}>\n      <Toolbar className={classes.toolbar}>\n        <Typography className={classes.typography}>Weather App</Typography>\n        <List component=\"nav\" aria-label=\"main manu\">\n          <Link href={process.env.PUBLIC_URL + \"/\"} className={classes.link} color=\"inherit\" variant=\"body1\">Home</Link>\n          <Link href={process.env.PUBLIC_URL + \"/favorites\"} className={classes.link} color=\"inherit\" variant=\"body1\">Favorites</Link>\n        </List>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 150,\n    maxHeight: 140,\n    textAlign: \"center\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 12,\n  },\n});\n\nconst CityCard = (props) => {\n  const classes = useStyles();\n  const { favorite } = props;\n  \n  const getWeeklyDay = () => {\n    const favoriteDate = new Date(favorite.LocalObservationDateTime)\n    return favoriteDate.toString().slice(0, 3);\n  }\n\n  const getTemprature = () => {\n    console.log(favorite)\n    let temperature = favorite.Temperature.Metric.Value;\n    temperature = Math.floor(temperature).toString() + \" °C\";\n    return temperature;\n  }\n  \n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {favorite.LocalizedName}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          {getWeeklyDay()}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {getTemprature()}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {favorite.WeatherText}\n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    city: state.city,\n    currentWeather: state.currentWeather,\n    favorites: state.favorites,\n  };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CityCard);","import React, { useState, useEffect } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CityCard from \"../components/CityCard\";\nimport localService from \"../services/localService\";\n  \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"1550px\",\n  },\n  text: {\n    margin: \"10px\",\n\n  },\n  card: {\n    margin: \"10px\",\n  },\n  noFavText: {\n    marginTop: \"20px\",\n  },\n  weatherText: {\n    margin: \"30px 60px 60px 60px\",\n    textAlign: \"center\",\n  },\n  textGrid: {\n    border: \"1px solid lightgrey\",\n  },\n  '@media (max-width:730px)': {\n  },\n}));\n\n\nconst Favorites = (props) => {\n  const classes = useStyles();\n  const favorites = localService.query()\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid \n        container item\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {(favorites && favorites.length > 0) && favorites.map((favorite, favoriteIdx) => (\n          <Grid item className={classes.card} key={favoriteIdx}>\n            <CityCard favorite={favorite} />\n          </Grid>\n        ))}\n        {(!favorites || favorites.length === 0) && <Typography className={classes.noFavText}>\n          No Favorite Cities.\n        </Typography>}\n      </Grid>\n    </Grid>\n  );\n};\n\n\nexport default Favorites;\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nimport Favorites from \"./pages/Favorites\";\n\nexport const history = createBrowserHistory();\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item xs={12}><Header/></Grid>\n      <Grid item container xs={12}>\n        <Router history={history} basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/favorites\" component={Favorites} exact />\n          </Switch>\n        </Router>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HaasRg from '../fonts/haas/NeueHaasDisplay-Roman.woff';\n\nconst haas = {\n  fontFamily: 'NeueHaasDisplay',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n  local('NeueHaasDisplay'),\n    local('NeueHaasDisplay-Roman'),\n    url(${HaasRg}) format('woff')\n  `,\n  unicodeRange:\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\n};\n\nlet theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 800,\n      lg: 960,\n      xl: 1920,\n    }\n  },\n  palette: {\n    // type: \"dark\",\n    primary: {\n      main: \"#1976d2\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n  spacing: 8,\n  typography: {\n    fontFamily: ['NeueHaasDisplay',\n      // 'Roboto',\n      // 'sans-serif'\n    ].join(','),\n    h1: {\n      fontSize: \"60px\",\n      fontWeight: \"400\",\n      lineHeight: \"75px\",\n    },\n    h2: {\n      fontSize: \"50px\",\n      fontWeight: \"400\",\n    },\n    h3: {\n      fontSize: \"17px\",\n      fontWeight: \"400\",\n      lineHeight: \"20px\",\n    },\n    h4: {\n      fontSize: \"13px\",\n    },\n    subtitle1: {\n      fontSize: \"40px\",\n      fontWeight: \"400\",\n      lineHeight: \"50px\",\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [haas],\n      },\n    },\n  },\n});\n\ntheme.typography.h1 = {\n  ...theme.typography.h1,\n  paddingLeft: \"50px\",\n  [theme.breakpoints.down('lg')]: {\n    paddingLeft: \"50px\",\n    paddingRight: \"20px\",\n  },\n  '@media (max-width:735px)': {\n    fontSize: \"8.9vw\",\n    paddingLeft: \"10px\",\n    lineHeight: \"10vw\",\n    padding: \"0px\",\n  },\n  '@media (max-width:500px)': {\n    fontSize: \"11.6vw\",\n    lineHeight: \"13.5vw\",\n    padding: \"0px\",\n  },\n};\n\n\nexport default theme;","const initialState = { city: { \"Key\": \"215854\", \"LocalizedName\": \"Tel Aviv\" }, currentWeather: {Temperature: { Metric: { Value: \"--\"}}}, forecasts: [], autoCompCityList: [] }\r\n\r\nconst homeReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"LOAD_CITY\":\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n      };\r\n    case \"WEATHER_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentWeather: {\r\n          ...action.currentWeather,\r\n        },\r\n      };\r\n    case \"AUTO_COMPLETE_UPDATE\":\r\n      return {\r\n        ...state,\r\n        autoCompCityList: action.cityList,\r\n      };\r\n    case \"FORECASTS_UPDATE\":\r\n      return {\r\n        ...state,\r\n        forecasts: [\r\n          ...action.forecasts\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default homeReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import rootReducer from \"./redux/reducers/index\";\nimport theme from \"./assets/theme/theme\";\nimport homeReducer from \"./redux/reducers/homeReducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  homeReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/NeueHaasDisplay-Roman.127d6b3d.woff\";"],"sourceRoot":""}